#!/usr/bin/env python
"""Push or pull changes from the hpc to my local machine"""
import os
import re
from os.path import expanduser, realpath, sep
import sys
import argparse
d = os.path.dirname(os.path.realpath(__file__))
sys.path.insert(0, os.path.join(d, '../../../lib/python/local-packages'))
from syncer import Syncer

blade = 'ceerws1106'

def fixpath(f):
    z = f[-1]
    f = realpath(expanduser(f))
    if os.path.isfile(f):
        return f
    elif os.path.isdir(f):
        return f + sep
    elif z == sep:
        return f + sep
    else:
        return f

def main(argv=None):
    if argv is None:
        argv = sys.argv[1:]
    p = argparse.ArgumentParser()
    p.add_argument('action', choices=('push', 'pull'))
    p.add_argument('S', metavar='sources', nargs='*')
    p.add_argument('--delete', action='store_true', help='Delete')
    p.add_argument('--cae', action='store_true', help='include .cae files')
    p.add_argument('--odb', action='store_true', help='include .odb files')
    p.add_argument('--h3d', action='store_true', help='include .h3d files')
    p.add_argument('--hm', action='store_true', help='include .hm files')
    p.add_argument('--prt', action='store_true', help='include .prt files')
    p.add_argument('-j', type=int, default=2, help='Number of jobs')
    p.add_argument('--dryrun', action='store_true')
    p.add_argument('--skip', action='append')
    p.add_argument('--dest', default=blade, choices=(blade, 'mutrino'))
    p.add_argument('-b', '--bookmarks', action='store_true',
           help='sync bookmarks')
    p.add_argument('--loc', action='store_true', help='sync ~/Local/')
    args = p.parse_args()

    if args.bookmarks:
        args.S.append('~/.bookmarks')
        args.S.append('~/.cdhistory')

    if args.skip is None:
        args.skip = []

    args.skip.extend(['*.com', '*.par', '*.pbslog', '*.pes', '*.pmg',
        '*.res', '*.stt', '*.sim', '*~', '*.mdl', '*.odb_f', 'gui_tmp',
        '*.log', 'abaqus.rpy*', 'aba???.*', '~$*', '*.swp', '*.SMABulk',
        '*.SMAFocus', '*.023', '*.cid', '*.lck', '*.tmp'])

    if args.loc:
        args.S.append('~/Local/')
        args.skip.extend(['env/Jupyter/', 'Jupyter'])

    if not args.cae:
        args.skip.extend(['*.cae', '*.jnl'])

    if not args.h3d:
        args.skip.append('*.h3d')

    if not args.odb:
        if not any([f.endswith('.odb') for f in args.S]):
            args.skip.extend(['*.odb', '*.sta', '*.msg', '*.dat', '*.fil'])

    if not args.prt:
        args.skip.extend(['*.prt'])

    if not args.hm:
        if not any([f.endswith('.hm') for f in args.S]):
            args.skip.extend(['*.hm'])

    if not args.S:
        args.S = [os.getcwd()]
    sources = [fixpath(s) for s in args.S]

    s = Syncer(args.dest, args.action, sources, delete=args.delete,
            nproc=args.j, dryrun=args.dryrun, skip=args.skip)
    s.sync()

if __name__ == '__main__':
    main()
