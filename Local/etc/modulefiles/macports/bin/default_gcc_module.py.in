family('compiler')

prefix = getenv('MACPORTS_ROOT')
if not os.path.isdir(prefix):
    log_error('Load Error: ' + prefix + ' does not exist')

# Set up MODULEPATH so that modules dependent on this compiler can be found
MY_MODULEPATH_ROOT = getenv('MY_MODULEPATH_ROOT')
MODULEPATH = os.path.join(MY_MODULEPATH_ROOT,
                          'macports/compiler/gcc/{version}')
prepend_path('MODULEPATH', MODULEPATH)

# Set the environment
PATH = os.path.join(prefix, 'bin')
prepend_path('PATH', PATH)

LIBRARY_PATH = os.path.join(prefix, 'lib')
# This modules paths
if not os.path.isdir(LIBRARY_PATH):
    log_error('Load Error: ' + LIBRARY_PATH + ' does not exist')

prepend_path('DYLD_LIBRARY_PATH', os.path.join(LIBRARY_PATH, 'gcc{major}'))
prepend_path('DYLD_LIBRARY_PATH', LIBRARY_PATH)
prepend_path('LIBRARY_PATH', LIBRARY_PATH)

# Set the MANPATH
append_path('MANPATH', os.path.join(prefix, 'share/man'))

# Set the compiler environment
setenv('COMPILER', 'gcc')
setenv('COMPILER_VER', '{version}')

CC  = os.path.join(prefix, 'bin/gcc')
CXX  = os.path.join(prefix, 'bin/g++')
CPP  = os.path.join(prefix, 'bin/cpp')
FC  = os.path.join(prefix, 'bin/gfortran')

setenv('CC', CC)
set_alias('gcc', CC)
set_alias('cc',  CC)

setenv('CXX', CXX)
set_alias('g++', CXX)
set_alias('c++', CXX)

setenv('FC', FC)
set_alias('f77', FC)
set_alias('f90', FC)
set_alias('gfortran', FC)

set_alias('cpp', CPP)
set_alias('ld',  CC)

# Module environment variables
setenv('GCC_ROOT', prefix)
setenv('GCC_VERSION', '{version}')
setenv('GCC_LIBRARY_PATH', LIBRARY_PATH)
setenv('GCC_INCLUDE_PATH', os.path.join(prefix, 'include'))

# Activate this compiler in Macports
command = '/opt/local/bin/port select --set gcc mp-{port_name}'
execute(command, mode='load')
